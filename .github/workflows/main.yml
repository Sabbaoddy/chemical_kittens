name: telegram notify
on:
  push:
    branches:
      - main
      - development

env:
  TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
  TELEGRAM_BOT_ID: ${{ secrets.TELEGRAM_BOT_ID }}
  GITHUB_REPO: ${{ github.repository }}
  GITHUB_URL: ${{ github.server_url }}/${{ github.repository }}/actions/
  GITHUB_ACTIONS_URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

jobs:
  build:
    name: Build
    runs-on: ubuntu-20.04
    timeout-minutes: 7
    steps:
      - name: checkout code
        uses: actions/checkout@v3
      
      - name: upload artifact name artifact
        uses: actions/upload-artifact@v3
        with:
           name: ARTIFACT_NAME
           path: ARTIFACT_NAME.txt

  deploy:
    name: Deploy
    needs: build
    runs-on: ubuntu-20.04
    timeout-minutes: 7
    steps:
      - name: preparing artifact name
        uses: actions/download-artifact@v3
        with:
          name: ARTIFACT_NAME

      - name: preparing artifact name
        run: |-
          ARTIFACT_NAME=`cat ARTIFACT_NAME.txt`
          echo "ARTIFACT_NAME=$ARTIFACT_NAME" >> $GITHUB_ENV

  build-failed:
    name: Notify build failed
    needs: build
    if: ${{ always() && contains(join(needs.build.result, ','), 'failure') }}
    runs-on: ubuntu-20.04
    timeout-minutes: 7
    steps:
      - name: checkout code
        uses: actions/checkout@v3

      - name: notify
        run: |-
          echo ${{ env.GITHUB_REPO }} >> intro.txt
          echo ${{ env.TELEGRAM_CHAT_ID }} > chat_id
          echo ${{ env.TELEGRAM_BOT_ID }} > bot_id
          echo "Build%20DEVELOPMENT" > message
          echo "Log: ${{ env.GITHUB_ACTIONS_URL }}" >> log.txt
          chmod +x deployment/notify/failed.sh
          ./deployment/notify/failed.sh

  build-success:
    name: Notify build success
    needs: build
    if: ${{ always() && contains(join(needs.build.result, ','), 'success') }}
    runs-on: ubuntu-20.04
    timeout-minutes: 7
    steps:
      - name: checkout code
        uses: actions/checkout@v3

      - name: notify
        run: |-
          echo ${{ env.GITHUB_REPO }} >> intro.txt
          echo ${{ env.TELEGRAM_CHAT_ID }} > chat_id
          echo ${{ env.TELEGRAM_BOT_ID }} > bot_id
          echo "Build%20DEVELOPMENT" > message
          echo "Log: ${{ env.GITHUB_ACTIONS_URL }}" >> log.txt
          chmod +x deployment/notify/success.sh
          ./deployment/notify/success.sh

  deploy-failed:
    name: Notify deploy failed
    needs: deploy
    if: ${{ always() && contains(join(needs.deploy.result, ','), 'failure') }}
    runs-on: ubuntu-20.04
    timeout-minutes: 7
    steps:
      - name: checkout code
        uses: actions/checkout@v3

      - name: notify
        run: |-
          echo ${{ env.GITHUB_REPO }} >> intro.txt
          echo ${{ env.TELEGRAM_CHAT_ID }} > chat_id
          echo ${{ env.TELEGRAM_BOT_ID }} > bot_id
          echo "Deploy%20DEVELOPMENT" > message
          echo "Log: ${{ env.GITHUB_ACTIONS_URL }}" >> log.txt
          chmod +x deployment/notify/failed.sh
          ./deployment/notify/failed.sh

  deploy-success:
    name: Notify deploy success
    needs: deploy
    if: ${{ always() && contains(join(needs.deploy.result, ','), 'success') }}
    runs-on: ubuntu-20.04
    timeout-minutes: 7
    steps:
      - name: checkout code
        uses: actions/checkout@v3
        
      - name: notify
        run: |-
          echo ${{ env.GITHUB_REPO }} >> intro.txt
          echo ${{ env.TELEGRAM_CHAT_ID }} > chat_id
          echo ${{ env.TELEGRAM_BOT_ID }} > bot_id
          echo "Deploy%20DEVELOPMENT" > message
          echo "Log: ${{ env.GITHUB_ACTIONS_URL }}" >> log.txt
          chmod +x deployment/notify/success.sh
          ./deployment/notify/success.sh
